1. What is JSX?
- JSX is a JavaScript extension that allows you to write HTML-like or XML like code within your JavaScript, commonly used in React to define user interface components more easily. It's then transpiled into standard JavaScript for rendering in web browsers.
2. Superpower of JSX?
-the superpowers of JSX  are:
HTML-Like Integration: JSX makes developer life easier. it combines HTML-like syntax within JavaScript.
JavaScript Expressions: It allows embedding dynamic JavaScript code within UI elements.
Component Reusability: JSX promotes the creation of reusable UI components.
Declarative UI: It enables declarative UI design, defining how UI should look based on data.
Babel Transpilation: JSX is transpiled to browser-readable JavaScript by tools like Babel.
Type Safety: When used with TypeScript, JSX offers strong typing for better code validation.

3. Role of type attribute in script tag? What option can I use there?
-The type attribute in the <script> tag specifies the scripting language or media type of the embedded code within the script element. 
1.JavaScript (Default): If you don't specify the type attribute, it defaults to "text/javascript." This indicates that the content is JavaScript code.
<script>
    // JavaScript code here
</script>
2.Module Script: You can use the "module" type to indicate that the content is an ES6 module, which allows you to use features like import and export.
<script type="module">
    // ES6 module code here
</script>
3.JSON: You can use the "application/json" type to include JSON data within a script tag. This is useful for embedding configuration or data.
<script type="application/json">
    { "key": "value"}
</script>

4. {TitleComponent} vs {TitleComponent/} vs  {<TitleComponent><TitleComponent/>} in jsx ?
All of the syntax of different ways of rendering a component.
{TitleComponent}: This represents a value in the javascript. If there is a variable called TitleComponent then it will render the variable value in the page.
{<TitleComponent />}: This will return a React component in the page. There is no children passed in the parameter.
{<TitleComponent></TitleComponent>}: This is another way of rendering React component just like the self closing one. This way is used when we are supposed to provide some children in the Component as well.
